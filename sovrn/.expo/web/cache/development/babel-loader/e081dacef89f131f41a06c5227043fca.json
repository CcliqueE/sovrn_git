{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useFonts } from 'expo-font';\nimport { LineChart } from 'react-native-chart-kit';\nvar window = Dimensions.get('window');\n\nvar x_button = require(\"../assets/img/x_button02.png\");\n\nexport default function Wallet(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var location = route.params.location;\n\n  var goBack = function goBack() {\n    navigation.navigate(location);\n  };\n\n  var data = [3, 7, 5, 9, 10, 4, 12, 5];\n\n  var _useFonts = useFonts({\n    'Louis': require(\"../assets/fonts/Louis_George_Cafe.ttf\"),\n    'LinLibertime': require(\"../assets/fonts/LinLibertime.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  if (!loaded) {\n    return null;\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.wallet_header\n  }, React.createElement(Text, {\n    style: styles.wallet_header_text\n  }, \"Wallet\")), React.createElement(Pressable, {\n    onPress: goBack,\n    style: styles.x_button_container\n  }, React.createElement(Image, {\n    style: styles.x_button,\n    source: x_button\n  })), React.createElement(View, {\n    style: styles.wallet_balance_container\n  }, React.createElement(Text, {\n    style: styles.wallet_balance_text\n  }, \"12.5\")), React.createElement(View, {\n    style: styles.chart_container\n  }, React.createElement(LineChart, {\n    data: {\n      datasets: [{\n        data: data\n      }, {\n        data: [1]\n      }, {\n        data: [10]\n      }]\n    },\n    width: window.width,\n    height: window.height / 2.2,\n    withOuterLines: false,\n    withInnerLines: false,\n    withShadow: true,\n    withHorizontalLabels: false,\n    withVerticalLabels: false,\n    chartConfig: {\n      backgroundColor: 'white',\n      originY: 20000,\n      backgroundGradientFromOpacity: 0,\n      backgroundGradientToOpacity: 0,\n      decimalPlaces: 0,\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        return \"#66FD4B\";\n      },\n      labelColor: function labelColor() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(255, 255, 255, \" + opacity + \")\";\n      },\n      strokeWidth: 2,\n      style: {\n        borderRadius: 20,\n        right: 20\n      },\n      propsForDots: {\n        fill: '#369B24',\n        r: \"6\",\n        strokeWidth: \"0\",\n        stroke: \"#ffa726\"\n      },\n      propsForLabels: {\n        translateX: window.width,\n        fontSize: 20\n      }\n    },\n    hidePointsAtIndex: [0, 1, 2, 3, 4, 5, 6],\n    bezier: true,\n    style: styles.chart\n  }), React.createElement(View, {\n    style: styles.chart_interface\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#424242',\n    alignItems: 'center'\n  },\n  wallet_header: {\n    top: window.height / 18,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  wallet_header_text: {\n    fontSize: window.width / 15,\n    fontFamily: 'Louis'\n  },\n  wallet_balance_container: {\n    top: window.height / 10\n  },\n  wallet_balance_text: {\n    fontSize: window.width / 5,\n    fontFamily: 'Louis',\n    color: '#8F8F8F'\n  },\n  x_button_container: {\n    zIndex: 1,\n    position: 'absolute',\n    left: window.width / 18,\n    top: window.height / 18,\n    width: window.width / 13,\n    height: window.width / 13,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  x_button: {\n    width: window.width / 15,\n    height: window.width / 15\n  },\n  x_button_text: {\n    color: 'white',\n    textAlign: 'center'\n  },\n  chart_container: {\n    position: 'absolute',\n    top: window.height / 5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  chart: {\n    paddingRight: 0,\n    left: 0\n  },\n  chart_interface: {\n    position: 'absolute',\n    top: window.height / 3,\n    width: window.width,\n    borderRadius: 10,\n    height: window.height / 20,\n    backgroundColor: '#535353'\n  }\n});","map":{"version":3,"sources":["/Users/schafferluke/Documents/projects/T_T/sovrn/screens/wallet.js"],"names":["React","useFonts","LineChart","window","Dimensions","get","x_button","require","Wallet","navigation","route","location","params","goBack","navigate","data","loaded","styles","container","wallet_header","wallet_header_text","x_button_container","wallet_balance_container","wallet_balance_text","chart_container","datasets","width","height","backgroundColor","originY","backgroundGradientFromOpacity","backgroundGradientToOpacity","decimalPlaces","color","opacity","labelColor","strokeWidth","style","borderRadius","right","propsForDots","fill","r","stroke","propsForLabels","translateX","fontSize","chart","chart_interface","StyleSheet","create","alignItems","top","justifyContent","fontFamily","zIndex","position","left","x_button_text","textAlign","paddingRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Pressable, StyleSheet, Image, Text, View, Dimensions } from 'react-native';\nimport { useFonts } from 'expo-font';\nimport { LineChart } from 'react-native-chart-kit'\n\nconst window = Dimensions.get('window')\n\nconst x_button = require('../assets/img/x_button02.png')\n\nexport default function Wallet({ navigation, route }) {\n\t\n    const location = route.params.location\n\n    const goBack = () => {\n\t\tnavigation.navigate(location)\n\t}\n\n    const data = [3, 7, 5, 9, 10, 4, 12, 5]\n\n    const [loaded] = useFonts({\n        'Louis': require('../assets/fonts/Louis_George_Cafe.ttf'),\n        'LinLibertime': require('../assets/fonts/LinLibertime.ttf')\n    })\n\n    if (!loaded) {\n        return null;\n    }\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.wallet_header}>\n                <Text style={styles.wallet_header_text}>Wallet</Text>\n            </View>\n            <Pressable onPress={goBack} style={styles.x_button_container}>\n                <Image style={styles.x_button} source={x_button}/>\n            </Pressable>\n            <View style={styles.wallet_balance_container}>\n                <Text style={styles.wallet_balance_text}>12.5</Text>\n            </View>\n            <View style={styles.chart_container}>\n                <LineChart \n                data={\n                    {\n                        datasets: [\n                            {\n                                data: data\n                            },\n                            {\n                                data: [1]\n                            },\n                            {\n                                data: [10]\n                            }\n                        ]\n                    }\n                }\n                width={window.width} \n                // height={window.height / 2}\n                // yAxisLabel='$'\n                // yAxisSuffix='k'\n                height={window.height / 2.2}\n                // yAxisInterval={1}\n                withOuterLines={false}\n                withInnerLines={false}\n                // width={window.width}\n                // withDots={false}\n                withShadow={true}\n                // withVerticalLabels={true}\n                withHorizontalLabels={false}\n                withVerticalLabels={false}\n                chartConfig={{\n                    backgroundColor: 'white',\n                    originY: 20000,\n                    // backgroundGradientFrom: '#424242',\n                    // backgroundGradientTo: 'white',\n                    backgroundGradientFromOpacity: 0,\n                    backgroundGradientToOpacity: 0,\n                    decimalPlaces: 0,\n                    color: (opacity = 0) => `#66FD4B`,\n                    labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                    // barRadius: -10,\n                    strokeWidth: 2,\n                    style: {\n                        borderRadius: 20,\n                        // alignContent: 'center',\n                        // alignItems: 'center'\n                        right: 20\n                    },\n                    // width: window.width,\n                    propsForDots: {\n                        fill: '#369B24',\n                        r: \"6\",\n                        strokeWidth: \"0\",\n                        stroke: \"#ffa726\"\n                    },\n                    propsForLabels: {\n                        translateX: window.width,\n                        // fontFamily: 'Louis'\n                        fontSize: 20\n                    },\n                    \n                    \n                }}\n                hidePointsAtIndex={[0, 1, 2, 3, 4, 5, 6]}\n                bezier\n                style={styles.chart}/>\n                <View style={styles.chart_interface}>\n                    \n                </View>\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#424242',\n        alignItems: 'center'\n    },\n    wallet_header: {\n        top: window.height / 18,\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    wallet_header_text: {\n        fontSize: window.width / 15,\n        fontFamily: 'Louis'    \n    },\n    wallet_balance_container: {\n        top: window.height / 10,\n    },\n    wallet_balance_text: {\n        fontSize: window.width / 5,\n        fontFamily: 'Louis',\n        color: '#8F8F8F'\n    },\n    x_button_container: {\n        zIndex: 1,\n        position: 'absolute',\n        // backgroundColor: '#333333',\n        left: window.width  / 18,\n        top: window.height / 18,\n        width: window.width / 13,\n        height: window.width / 13,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    x_button: {\n        width: window.width / 15,\n        height: window.width / 15\n    },\n    x_button_text: {\n        color: 'white',\n        textAlign: 'center'\n    },\n    chart_container: {\n        position: 'absolute',\n        top: window.height / 5,\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    chart: {\n        paddingRight: 0,\n        left: 0\n    },\n    chart_interface: {\n        position: 'absolute',\n        top: window.height / 3,\n        width: window.width,\n        borderRadius: 10,\n        height: window.height / 20,\n        backgroundColor: '#535353'\n    }\n})"]},"metadata":{},"sourceType":"module"}